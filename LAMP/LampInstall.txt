在虚拟机VMware WorkStation 12.0环境下布置
一、开发环境
	1.CentOS 6.5
	2.Apache 2.2.15
	3.Mysql server 5.6.
	4.Php5.6
	5.git
	6.phalcon

二、安装部署
	1.下载CentOS6.5，安装在虚拟机VMare中
	

	2.安装Apache2.2.31，下载网址http://httpd.apache.org/download.cgi#apache22
	#查看是否已经安装了apache
	#rpm -qa | grep httpd
		httpd-tools-2.2.15-47.el6.centos.i686
		httpd-2.2.15-47.el6.centos.i686
		
	#卸载系统的apache
	#rpm -e --nodeps httpd-tools-2.2.15-47.el6.centos.i686
	#rpm -e --nodeps httpd-2.2.15-47.el6.centos.i686
	
	#使用yum卸载
	#yum remove apache
	
	#检验apr版本，卸载安装新版本 
    #rpm -qa | grep apr
		apr-util-1.3.9-3.el6_0.1.i686
		apr-1.3.9-5.el6_2.i686
		apr-util-ldap-1.3.9-3.el6_0.1.i686
	
	#卸载apr
	#yum remove apr
	#yum remove apr-util-devel apr apr-util-mysql apr-docs apr-devel apr-util apr-util-docs
	
	#安装前创建对应的目录
	#mkdir -p /usr/local/pcre
	#mkdir -p /usr/local/apr
	#mkdir -p /usr/local/apr-util
	
	#安装pcre
	#tar -jxvf pcre2-10.20.tar.bz2 
	#cd pcre2-10.20
	#./configure --prefix=/usr/local/pcre
	#make
	#make install
	
	#安装apr
	#tar -zxvf apr-1.5.2.tar.gz
	#cd apr-1.2.0
	#./configure --prefix=/usr/local/apr
	#make
	#make install
	
	#安装apr-util
	#tar -zxvf apr-util-1.5.4.tar.gz
	#cd apr-util-1.5.4
	#./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr
	#make
	#make install
	
	#执行安装 
	#cd /usr/local
	#tar -zxvf httpd-2.2.31.tar.gz         #解压压缩包 
	#rm -rf httpd-2.2.31.tar.gz            #删除压缩包 
	#cd httpd-2.2.31 
	#mkdir -p /usr/local/apache    #创建安装目录
	#./configure --prefix=/usr/local/apache --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util/    #设置参数安装 
	#make
	#make install
	
	#调试
	#vi /etc/httpd/conf/httpd.conf   加入一句  ServerName  localhost:80
	#vi /etc/httpd/conf.d/phpMyAdmin.conf  //可以指定apache目录
	
	#启动
	#/usr/local/apache/bin/apachectl start 
	#/usr/local/apache/bin/apachectl restart
	#/usr/local/apache/bin/apachectl stop
	
	#结果
	127.0.0.1 显示 It works!	
	
	
	3.安装Mysql server5.6,下载网址http://dev.mysql.com/downloads/mysql/,具体地址为http://cdn.mysql.com/Downloads/MySQL-5.6/MySQL-5.6.27-1.linux_glibc2.5.i386.rpm-bundle.tar
	#查看是否安装了mysql,如果有则删除
	#rpm -qa|grep -i mysql
	
	#解压缩
	#tar xvf MySQL-5.6.27-1.linux_glibc2.5.x86_64.rpm-bundle.tar
	#产生以下文件
		MySQL-client-5.6.27-1.linux_glibc2.5.x86_64.rpm
		MySQL-devel-5.6.27-1.linux_glibc2.5.x86_64.rpm
		MySQL-embedded-5.6.27-1.linux_glibc2.5.x86_64.rpm
		MySQL-server-5.6.27-1.linux_glibc2.5.x86_64.rpm
		MySQL-shared-5.6.27-1.linux_glibc2.5.x86_64.rpm
		MySQL-shared-compat-5.6.27-1.linux_glibc2.5.x86_64.rpm
		MySQL-test-5.6.27-1.linux_glibc2.5.x86_64.rpm
		
	#安装libaio
	#rpm -qa | grep libaio
	#yum install libaio-0.3.107-10.el6.i686
	
	#安装rpm包,先查看一下,再安装.加上那两个参数的意义就在于，安装时不再分析包之间的依赖关系而直接安装，也就不会再提示error: Failed dependencies:这样的错误了--nodeps --force
	#rpm -qpl MySQL-server-5.6.27-1.linux_glibc2.5.i386.rpm
	
	#rpm -ivh MySQL-server-5.6.27-1.linux_glibc2.5.i386.rpm
	#rpm -ivh MySQL-client-5.6.27-1.linux_glibc2.5.i386.rpm
	#rpm -ivh MySQL-devel-5.6.27-1.linux_glibc2.5.i386.rpm
	#rpm -ivh MySQL-embedded-5.6.27-1.linux_glibc2.5.i386.rpm
	#rpm -ivh MySQL-shared-5.6.27-1.linux_glibc2.5.i386.rpm
	#rpm -ivh MySQL-shared-compat-5.6.27-1.linux_glibc2.5.i386.rpm
	#rpm -ivh MySQL-test-5.6.27-1.linux_glibc2.5.i386.rpm
	
	#安装PHP插件
	#yum install php56w-mysql.i386
	
	#检查mysql是否安装完毕
	#chkconfig 
	#查看mysql服务是否在运行
	###A RANDOM PASSWORD HAS BEEN SET FOR THE MySQL root USER !
	###You will find that password in '/root/.mysql_secret'.
	#cat /root/.mysql_secret
	### The random password set for the root user at Sat Oct 10 10:13:34 2015 (local time): plNVadpmHWHPfaN0
	#/usr/bin/mysql_secure_installation --user=mysql
	###会提示各种修改，特别是要修改密码
	#mysql -u root -p
	#MySQL安装后涉及的目录如下：	
		目录	目录中的内容
		/usr/bin	客户端程序和脚本
		/usr/sbin	Mysqld服务器
		/var/lib/mysql	数据库的日志文件
		/usr/share/info	信息格式手册
		/usr/share/man	Unix 手册页
		/usr/include/mysql	包括（标题）的文件
		/usr/lib/mysql	mysql的lib包
		/usr/share/mysql	杂项的支持文件，包括错误消息） 字符设置的文件，示例配置文件，SQL 数据库安装
		/usr/share/sql-bench	基准
		

	4.安装PHP5.6，下载网址http://php.net/get/php-5.6.14.tar.bz2.asc/from/a/mirror
	#清除php旧版本
	#rpm -qa|grep php
		php-common-5.3.3-46.el6_6.i686
		php-5.3.3-46.el6_6.i686
		php-devel-5.3.3-46.el6_6.i686
		php-cli-5.3.3-46.el6_6.i686
	
	#rpm -e --nodeps php-common-5.3.3-46.el6_6.i686 php-5.3.3-46.el6_6.i686 php-devel-5.3.3-46.el6_6.i686 php-cli-5.3.3-46.el6_6.i686
	#rpm -e --nodeps php-5.3.3-46.el6_6.i686
	#rpm -e --nodeps php-devel-5.3.3-46.el6_6.i686
	#rpm -e --nodeps php-cli-5.3.3-46.el6_6.i686

	
	#安装libxml2包
	#yum install libxml2
	#yum install libxml2-devel -y
	
	#安装各种包
	#yum install -y gcc gcc-c++  make zlib zlib-devel pcre pcre-devel  libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers
	
	#安装libmarypt
	#wget ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/attic/libmcrypt/libmcrypt-2.5.7.tar.gz
	#tar -zxvf libmcrypt-2.5.7.tar.gz
	#cd libmcrypt-2.5.7
	#./configure
	#make
	#make install	
	
	#wget http://cn2.php.net/distributions/php-5.6.2.tar.gz
	#tar jxvf php-5.6.14.tar.bz2
	#./configure \
	--prefix=/usr/local/php \
	--with-config-file-path=/usr/local/php/etc \
	--enable-fpm \
	--with-fpm-user=php-fpm \
	--with-fpm-group=php-fpm \
	--with-mysql=mysqlnd \
	--with-libxml-dir \
	--with-gd \
	--with-jpeg-dir \
	--with-png-dir \
	--with-freetype-dir \
	--with-iconv-dir \
	--with-zlib-dir \
	--with-mcrypt \
	--enable-soap \
	--enable-gd-native-ttf \
	--enable-ftp \
	--enable-mbstring \
	--enable-exif \
	--disable-ipv6 \
	--with-pear \
	--with-curl \
	--with-openssl
	
	###--with-mysql-sock=/tmp/mysql.sock \
	
	#make
	#make test
	#make install
	
	/************************************/
	/****PHP安装目录*********************/
	Installing shared extensions:     /usr/local/php/lib/php/extensions/no-debug-non-zts-20131226/
	Installing PHP CLI binary:        /usr/local/php/bin/
	Installing PHP CLI man page:      /usr/local/php/php/man/man1/
	Installing PHP FPM binary:        /usr/local/php/sbin/
	Installing PHP FPM config:        /usr/local/php/etc/
	Installing PHP FPM man page:      /usr/local/php/php/man/man8/
	Installing PHP FPM status page:      /usr/local/php/php/fpm/
	Installing PHP CGI binary:        /usr/local/php/bin/
	Installing PHP CGI man page:      /usr/local/php/php/man/man1/
	Installing build environment:     /usr/local/php/lib/php/build/
	Installing header files:          /usr/local/php/include/php/
	Installing helper programs:       /usr/local/php/bin/
	  program: phpize
	  program: php-config
	Installing man pages:             /usr/local/php/php/man/man1/
	  page: phpize.1
	  page: php-config.1
	Installing PEAR environment:      /usr/local/php/lib/php/
	[PEAR] Archive_Tar    - already installed: 1.3.12
	[PEAR] Console_Getopt - already installed: 1.3.1
	[PEAR] Structures_Graph- already installed: 1.0.4
	[PEAR] XML_Util       - already installed: 1.2.3
	[PEAR] PEAR           - already installed: 1.9.5
	Wrote PEAR system config file at: /usr/local/php/etc/pear.conf
	You may want to add: /usr/local/php/lib/php to your php.ini include_path
	/home/zhixin/environment/php-5.6.2/build/shtool install -c ext/phar/phar.phar /usr/local/php/bin
	ln -s -f /usr/local/php/bin/phar.phar /usr/local/php/bin/phar
	Installing PDO headers:          /usr/local/php/include/php/ext/pdo/
	/***************************************/
	
	
	
	#安装php-devel
	#yum install php-devel
	
	#翻墙简便安装PHP
	#rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm
	#yum install php56w php56w-opcache
	#yum install php56w-devel
	#yum install httpd mod_ssl
	
	/************************************/
	###配置apache
	#vi /etc/httpd/conf/httpd.conf
	<Directory />
		Options FollowSymLinks
		AllowOverride All   
		Order deny,allow
		Deny from all
	</Directory>
	###添加
	AddType application/x-httpd-php .php .phtml
	AddType application/x-httpd-php-source .phps	
	/************************************/
	
	
	5.安装git
	#yum install git
	#git clone https://github.com/git/git
	#vi INSTALL
	#yum install perl-ExtUtils-MakeMaker package
	#yum install gettext-devel
	#make
	#make install
	
	6.安装phalcon
	#cd cphalcon/build
	#./install
	###Add this line in your /etc/php.d/pdo.ini，先加载pdo,再加载phalcon
	####extension=phalcon.so
	
	7.安装项目
	#chkconfig --level 35 iptables off  //永久性关闭防火墙
	#git submodule init
	#git submodule update	
	#setenforce 0
	#git checkout -- .	
	#grep phalcon /etc/php* -R
	#which phalcon
	#php -m | grep phal
	#service httpd restart
	#service iptables stop	
	#mkdir app/cache
	#chown apache.apache app/cache/

